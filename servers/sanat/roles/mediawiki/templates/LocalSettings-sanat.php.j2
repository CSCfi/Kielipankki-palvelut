<?php

$wgSitename = 'Sanat';

$wgDBserver = '{{ instance.value.db.server_host }}';
$wgDBuser = '{{ instance.value.db.user }}';
$wgDBpassword = '{{ instance.value.db.password }}';
$wgDBname = '{{ instance.value.db.database }}';

$wgLogos = [
	'wordmark' => [ 'src' => '/KIELIPANKKI_logotxt_SU_EN.png', 'width' => '196', 'height' => '38' ],
];

$wgGroupPermissions['*']['createaccount'] = false;

$wgAllowDisplayTitle = true;
$wgRestrictDisplayTitle = false;

$wgUseInstantCommons = true;

wfLoadSkin( 'Vector' );
$wgDefaultSkin = 'vector-2022';
$wgVectorResponsive = true;
$wgVectorDefaultSidebarVisibleForAnonymousUser = true;
$wgVectorLanguageAlertInSidebar = false;
$wgVectorLanguageInMainPageHeader = true;

// Extensions with default configuration //

wfLoadExtensions( [
	'CodeEditor',
	'DeleteBatch',
	'InputBox',
	'NoTitle',
	'Sanat',
	'Translate',
	'YouTube',
	'WikiEditor'
] );

// Extensions with custom configuration //

wfLoadExtension( 'SemanticMediaWiki' );
enableSemantics( $VHOST );
$smwgCheckForConstraintErrors = SMW_CONSTRAINT_ERR_CHECK_NONE;
$smwgSearchByPropertyFuzzy = [ '_num', '_dat' ];

wfLoadExtension( 'PageForms' );
$wgPageFormsRedLinksCheckOnlyLocalProps = true;
$smwgQMaxInlineLimit = $wgCategoryPagingLimit = 500;

wfLoadExtension( 'ParserFunctions' );
$wgPFEnableStringFunctions = true;

wfLoadExtension( 'ReplaceText' );
wfLoadExtension( 'TemplateSandbox' );
wfLoadExtension( 'TemplateStyles' );
wfLoadExtension( 'UniversalLanguageSelector' );
$wgULSPosition = 'interlanguage';

wfLoadExtension( 'VEForAll' );
wfLoadExtension( 'VisualEditor' );
$wgVisualEditorEnableDiffPage = true;

// Content extensions and configuration //

function lfAddNamespace( $id, $name ) {
	global $wgExtraNamespaces, $wgContentNamespaces, $wgNamespacesToBeSearchedDefault,
		$wgCapitalLinkOverrides, $smwgNamespacesWithSemanticLinks;

	$constant = strtoupper( "NS_$name" );

	define( $constant, $id );
	define( $constant . '_TALK', $id + 1 );

	$wgExtraNamespaces[$id] = $name;
	$wgExtraNamespaces[$id + 1] = $name . '_talk';

	$wgContentNamespaces[] = $id;

	$wgNamespacesToBeSearchedDefault[$id] = true;
	$wgCapitalLinkOverrides[$id] = false;
	$wgCapitalLinkOverrides[$id + 1] = false;

	$smwgNamespacesWithSemanticLinks[$id] = true;
}

lfAddNamespace( 1200, 'Lud' );
wfLoadExtension( 'Lud' );

lfAddNamespace( 1202, 'WordNet' );
wfLoadExtension( 'WordNet' );
$wgNamespacesWithSubpages[NS_WORDNET] = true;

lfAddNamespace( 1204, 'Sms' );
lfAddNamespace( 1206, 'Izh' );
foreach ( $wgUrlProtocols as $index => $value ) {
	if ( $value === 'sms:' ) {
		unset( $wgUrlProtocols[ $index ] );
	}
}
$wgUrlProtocols = array_values( $wgUrlProtocols );

wfLoadExtension( 'Kotus' );
lfAddNamespace( 1210, 'Vepsä' );
lfAddNamespace( 1212, 'Slangipaikannimet' );
lfAddNamespace( 1216, 'Sosva' );
lfAddNamespace( 1218, 'Suomalais-venäläinen_kirja-alan_sanasto' );
lfAddNamespace( 1222, 'Namnledslexikon' );

wfLoadExtension( 'FinnFrameNet' );
lfAddNamespace( 1214, 'FinnFrameNet' );
lfAddNamespace( 1220, 'TransFrameNet' );

/* Etymologia-projekti */
lfAddNamespace( 1224, 'Etymologiadata' );
lfAddNamespace( 1228, 'EVE' );
$wgNamespaceProtection[ NS_ETYMOLOGIADATA ] = [ 'etymologi' ];
$wgNamespaceProtection[ NS_EVE ] = [ 'etymologiatoimittaja' ];
$wgGroupPermissions[ 'etymologiatoimittaja' ][ 'delete' ] = true;
$wgGroupPermissions[ 'etymologiatoimittaja' ][ 'move' ] = true;
$wgGroupPermissions[ 'etymologiatoimittaja' ][ 'etymologi' ] = true;
$wgGroupPermissions[ 'etymologiatoimittaja' ][ 'etymologiatoimittaja' ] = true;
$wgGroupPermissions[ 'etymologi' ][ 'etymologi' ] = true;
$wgAddGroups[ 'etymologiatoimittaja' ] = [ 'etymologiatoimittaja', 'etymologi' ];

lfAddNamespace( 1226, 'Tsilari' );
$wgNamespaceProtection[ NS_TSILARI ] = [ 'tsilari' ];
$wgGroupPermissions[ 'tsilari' ][ 'tsilari' ] = true;

/* Mikko Bentlin: Nikkilän ruotsalaisperäiset lainasanat [RT: CSC##309855] */
lfAddNamespace( 1230, 'Nikkilän_lainasanat' );

/* A. Kanner, N. Partanen: https://www.kotus.fi/kielitieto/1800-luvun_kirjasuomi/tutkimushankkeet */
lfAddNamespace( 1232, 'Rapola' );

/* Bibliografia (Etymologia-projekti) */
lfAddNamespace( 1234, 'Bibliografia001' );
$wgNamespaceProtection[ NS_BIBLIOGRAFIA001 ] = [ 'bibliografi' ];
$wgGroupPermissions[ 'etymologiatoimittaja' ][ 'bibliografi' ] = true;

/* Sampsa Holopainen */
lfAddNamespace( 1236, 'Hungarian_Historical_Phonology' );

/* Kimmo Granqvist */
lfAddNamespace( 1238, 'Suomen_romanikielen_verkkosanakirja' );

# Next free namespace 1240

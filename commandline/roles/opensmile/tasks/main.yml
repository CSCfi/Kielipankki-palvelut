---

- name: Ensure necessary directories exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
  loop:
    - "{{ src_root }}"
    - "{{ install_dir }}"
    - "{{ module_path }}"

- name: Get source
  ansible.builtin.unarchive:
    src: "{{ source_url }}"
    dest: "{{ src_root }}"
    remote_src: true
    creates: "{{ build_dir }}"

- name: Set custom build flags
  ansible.builtin.lineinfile:
    path: "{{ build_dir }}/build_flags.sh"
    regexp: "\\s*{{ item.flag }}="
    line: "{{ item.new_line }}"
  loop:
    - {flag: DWITH_FFMPEG, new_line: "    -DWITH_FFMPEG=ON"}
    - {flag: DMARCH_NATIVE, new_line: "    -DMARCH_NATIVE=ON"}

- name: Build
  ansible.builtin.shell:
    cmd: /bin/bash -lc "{{ opensmile_build_modcall }} /bin/bash build.sh"
    chdir: "{{ build_dir }}"
    creates: "{{ build_dir }}/build/progsrc/smilextract/SMILExtract"

- name: Copy executable to final location
  ansible.builtin.copy:
    src: "{{ build_dir }}/build/progsrc/smilextract/SMILExtract"
    dest: "{{ install_dir }}"
    mode: 0755
    group: p_installation
    remote_src: true

- name: Copy scripts and config to final location
  ansible.builtin.copy:
    src: "{{ build_dir }}/{{ item }}"
    dest: "{{ install_dir }}"
    group: p_installation
    remote_src: true
  loop:
    - scripts
    - config

- name: Remove build directory
  ansible.builtin.file:
    path: "{{ build_dir }}"
    state: absent

- name: Create lmod module
  ansible.builtin.template:
    src: module_template.j2
    dest: "{{ module_path }}/{{version}}.lua"
    mode: 0664

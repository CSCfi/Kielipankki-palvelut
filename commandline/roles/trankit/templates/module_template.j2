help([[
{{ package_name }} - multilingual natural language language processing

Trankit is a Python toolkit and is often used as a software library. It also
supports command-line use via the "python -m trankit" syntax. Main
supported use cases:

1. Parsing

All input to trankit has to be in plain text, with UTF-8 encoding. Supported
input formats are plaindoc, for general plain text files, plainsen for
separate sentences, one per line, and pretok for pretokenized text files,
with one token per line (and sentences separated by an empty line).

Organise your input data into a directory with a flat structure, ie. no
subdirectories, just plain input files in a directory with nothing else.

If you have only one input file, you may also use that directly as an option
to trankit.

Set up an empty directory which trankit will populate with output files, one
per input file.

The language models that trankit uses can be fetched into a directory of
your choosing, which takes a little time, or you can use our provided model
directory, containing the most commonly used models.

This command will process Finnish language files with the plaindoc
input_format, and using our provided model directory:

python -m trankit --input /directory/with/input/files \
  --output_dir /directory/with/output/files \
  --input_format plaindoc \
  --cache_dir $LB_MODELS \
  --lang finnish

If you wish to use your own directory for the models (and you will have to
do so if you are interested in an unsupported language), replace $LB_MODELS
with that directory.

NB: Apart from the language-specific models, trankit also uses a large
multilingual model. This is always accessed from our provided directory. If
you wish to override that, set the environment variable HF_HOME to a
directory of your choice.

2. Converting trankit's output to CoNLL-U

Trankit's output format is json. It supports converting the json to CoNLL-U,
but not from the command line. We (The Language Bank) have provided a small
script for doing the conversion for you. Mirroring trankit's operation, it
requires an --input option (file or directory containing input files) and an
--output_dir option, eg.

python trankit2conllu --input /path/to/trankit/output \
  --output_dir /path/to/conllu_output

For documentation, see https://trankit.readthedocs.io/en/latest/ and https://github.com/nlp-uoregon/trankit.
]])

prepend_path('PATH', '{{ bin_dir }}')
setenv("HF_HOME", '{{ shared_models_dir }}')
setenv("LB_MODELS", '{{ shared_models_dir }}')
setenv("HF_HUB_CACHE", os.getenv("HOME") .. "/.transformers")

if(mode() == 'load') then
        LmodMessage("")
        LmodMessage("trankit loaded. For help, see \"module help trankit\".")
        LmodMessage("")
end

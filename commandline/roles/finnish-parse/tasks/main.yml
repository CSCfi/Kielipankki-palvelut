---
# tasks file for finnish-parse

- name: "Debian/Ubuntu: Install list of packages"
  apt:
    name: [ default-jre ]
    state: present
  become: yes
  when:
    - ansible_os_family == "Debian"
    - is_admin

- name: "RHEL/CentOS: Install list of packages"
  yum: 
    name: [ default-jre ]
    state: present
  become: yes
  when:
    - ansible_os_family == "RedHat"
    - is_admin

- name: compile_root directory exists with 0777 permission
  become: no
  file: path={{ compile_root }}
    mode=0777
    recurse=no
    state=directory

- name: Clone repo
  git:
    repo: "{{ release_url }}"
    dest: "{{ compile_dir }}"
    force: yes
    depth: 1
    version: "{{ branch }}"

- name: Running install script
  command: "./install.sh"
  args:
    chdir: "{{ compile_dir }}"
#    creates: model/fin_model.marmot

- name: point python to /usr/bin on Puhti
  lineinfile:
    dest: "{{ compile_dir }}/parser_wrapper.sh"
    insertafter: "#!/bin/bash"
    line: "export PATH=/usr/bin/:$PATH"
    state: present


- name: Run quick test, creates pyc as side effect
  shell: "echo saunoja |./parser_wrapper.sh|grep sauna"
  args:
    chdir: "{{ compile_dir }}"
    
- name: Outcomment static TMPDIR
  lineinfile:
    dest: "{{ compile_dir }}/init.sh"
    regexp: "^export TMPDIR=tmp_data ; mkdir -p \\$TMPDIR.*$"
    state: absent

- name: Set dynamic TMPDIR
  lineinfile:
    dest: "{{ compile_dir }}/init.sh"
    regexp: "^export TMPDIR=`mktemp -d`$"
    line: "export TMPDIR=`mktemp -d`"
    state: present

- name: create install_dir subtree
  become: no
  file: path="{{ install_dir }}/{{ item }}"
    mode=0775
    recurse=no
    state=directory
  with_items:
    - share
    - bin

- name: Copy parser to install_dir
  command: rsync -a --delete --exclude=-git "{{ compile_dir }}" "{{ install_dir }}/share/Finnish-dep-parser/"

- name: install finnish-parse script
  template:
    src: finnish-parse.j2
    dest: "{{ install_dir }}/bin/finnish-parse"
    mode: 0775

- name: Fix permissions
  file:
    path: "{{ install_dir }}"
    group: "{{ shared_group }}"
    mode: "g+rwX,o+rX,o-w"
    recurse: yes
  when: shared_group is defined

---
# tasks file for hfst

- name: "Debian/Ubuntu: Install list of packages"
  apt:
    name:
      - libreadline-dev
      - libtool
      - automake
      - flex
      - build-essential
      - swig
      - python3-dev
    state: present
  become: yes
  when:
    - ansible_os_family == "Debian"
    - is_admin

- name: "RHEL/CentOS: Install list of packages"
  yum: 
    name:
      - libreadline-dev
      - libtool
      - automake
      - flex
      - build-essential
      - swig
      - python3-dev
    state: present
  become: yes
  when:
    - ansible_os_family == "RedHat"
    - is_admin

- name: Ensure finnish locale
  become: yes
  locale_gen:
    name: fi_FI.UTF-8
    state: present
  when: is_admin

- name: Create directories
  become: no
  file:
    path: "{{ item }}"
    mode: 0775
    recurse: no
    state: directory
  loop:
    - "{{ compile_dir }}"
    - "{{ module_path }}"

- name: check for install root
  stat:
    path: "{{ install_prefix }}"
  register: check_install_root

- name: Create install root
  become: "{{ is_admin }}"
  file:
    path: "{{ install_prefix }}"
    mode: 0777
    owner: "{{ ansible_user_id }}"
    recurse: false
    state: directory
  when: not check_install_root.stat.exists

- name: Download and extract tarball
  unarchive:
    src: "{{ release_url }}/v{{ hfst_version }}/{{ hfst_tarball }}"
    dest: "{{ compile_dir }}"
    creates: "{{ hfst_compile_dir }}/configure.ac"
    remote_src: yes

- name: Fix xglib bug in configure
  lineinfile:
    regexp: ^:\)| +\[AC_SUBST\(\[GLIB_CFLAGS\]\)\]\)$
    line: ':)'
    dest: "{{ hfst_compile_dir }}/configure.ac"

- name: Fix subdir-objects definition in configure
  lineinfile:
    regexp: subdir\-objects\]\)$
    line: 'AM_INIT_AUTOMAKE([-Wall std-options foreign check-news])'
    dest: "{{ hfst_compile_dir }}/configure.ac"

- name: Disable hfst-tagger tests (1)
  lineinfile:
    regexp: TESTS=
    line: '#'
    dest: "{{ hfst_compile_dir }}/tools/src/hfst-tagger/src/Makefile.am"

- name: Disable hfst-tagger tests (2)
  lineinfile:
    regexp: check_PROGRAMS=
    line: '# \'
    dest: "{{ hfst_compile_dir }}/tools/src/hfst-tagger/src/Makefile.am"

- name: Remove lexc/yacc rules from foma back-end
  replace:
    path: "{{ hfst_compile_dir }}/back-ends/foma/Makefile.am"
    regexp: '((^lex\.)|(^regex\.c)|(^[^ \t]*$\((LEX|YACC)\)))'
    replace: '#\1'

- name: Running ./autoreconf -i 
  command: "autoreconf -i"
  args:
    chdir: "{{ hfst_compile_dir }}"
    creates: libtool

# Setting prefix explicitly to be able to replace it later in scripts
- name: Running ./configure 
  shell: /bin/bash -lc "{{ gcc_modcall }} ./configure --enable-all-tools --with-readline --enable-fsmbook-tests --prefix=/usr/local"
  args:
    chdir: "{{ hfst_compile_dir }}"
    creates: config.log
    
- name: Running make 
  shell: /bin/bash -lc "{{ gcc_modcall }} make -j8 > MAKE.log"
  args:
    chdir: "{{ hfst_compile_dir }}"
    #creates: MAKE.log
    
- name: Running make check
  shell: bash --login -c "{{ gcc_modcall }} make check  > MAKE_CHECK.log"
  args:
    chdir: "{{ hfst_compile_dir }}"
    #creates: MAKE_CHECK.log

- name: Fix missing "bin" dir bug in Makefile
  become: no
  file:
    path: "{{ hfst_install_dir }}/bin"
    mode: 0775
    recurse: no
    state: directory

- name: Running make install
  shell: "make install prefix={{ hfst_install_dir }} > MAKE_INSTALL.log"
  args:
    chdir: "{{ hfst_compile_dir }}"
    #creates: "{{ hfst_install_dir }}/bin/hfst-lookup"

- name: Building python module
  shell: bash --login -c  "{{ python_swig_modcall }}python3 setup.py build_ext --inplace --local-hfst"
  args:
    chdir: "{{ hfst_compile_dir }}/python"

- name: Installing python module
  shell: bash --login -c  "{{ python_swig_modcall }}python3  setup.py install --prefix={{ hfst_install_dir }}  "
  args:
    chdir: "{{ hfst_compile_dir }}/python"
  environment:
    PYTHONPATH: "{{ hfst_install_dir }}/lib/python{{ python3_base_version }}/site-packages"

- name: "HACK: Get easy-install.pth content"
  slurp:
    src: "{{ hfst_install_dir }}/lib/python{{ python3_base_version }}/site-packages/easy-install.pth"
  register: slurped_data

- name: Decode content and store as fact
  set_fact:
    libhfst_name_egg: "{{ slurped_data.content | b64decode | trim }}"

# This relates to https://jira.eduuni.fi/browse/KP-5755
# Part of PR 50: https://github.com/CSCfi/Kielipankki-palvelut/pull/50/commits/4ed0590d5aad526805ccbc2d60334164f46ad81e
# I wonder whether this can be generalized -mma 24.10.2022
- name: Add hfst path to library directories
  copy:
    dest: "/etc/ld.so.conf.d/libhfst.conf"
    content: "{{ hfst_install_dir }}/lib"
  become: yes
  notify: Update ldconfig
  when: inventory_hostname == 'localhost'

- name: Flush handlers to ensure that ldconfig is run before checking the module
  meta: flush_handlers

- name: Checking python module
  shell: bash --login -c  "{{ python_modcall }} LD_LIBRARY_PATH={{ hfst_install_dir }}/lib/:$LD_LIBRARY_PATH && ./test.sh  --verbose --python python3 --pythonpath {{ hfst_install_dir }}/lib/python{{ python3_base_version }}/site-packages/{{ libhfst_name_egg }}"
  args:
    chdir: "{{ hfst_compile_dir }}/python/test"

- name: Create modulefile installation directory
  file:
    path: "{{ module_path }}"
    state: directory

- name: Install modulefile
  template:
    src: module_template.j2
    dest: "{{ module_path }}/{{ version }}.lua"
    mode: 0644


- name: Fix permissions (if shared group is set)
  file:
    path={{ hfst_install_dir }}
    group={{ shared_group }}
    mode="g+rwX,o+rX,o-w"
    recurse=yes
  when: shared_group is defined
